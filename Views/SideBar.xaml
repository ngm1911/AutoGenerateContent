<UserControl x:Class="AutoGenerateContent.Views.SideBar"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:local="clr-namespace:AutoGenerateContent.Views"
             xmlns:viewmodel="clr-namespace:AutoGenerateContent.ViewModel"
             mc:Ignorable="d"
             d:DataContext="{d:DesignInstance Type=viewmodel:SideBarViewModel}"
             d:DesignHeight="562.5" d:DesignWidth="300"
    xmlns:theme="clr-namespace:Microsoft.Windows.Themes;assembly=PresentationFramework.Aero2">
    <UserControl.Resources>
        <Style x:Key="FocusVisual">
            <Setter Property="Control.Template">
                <Setter.Value>
                    <ControlTemplate>
                        <Rectangle Margin="2" StrokeDashArray="1 2" Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" SnapsToDevicePixels="true" StrokeThickness="1"/>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <SolidColorBrush x:Key="Button.Static.Background" Color="#FFDDDDDD"/>
        <SolidColorBrush x:Key="Button.Static.Border" Color="#FF707070"/>
        <SolidColorBrush x:Key="Button.MouseOver.Background" Color="#dcdcdc"/>
        <SolidColorBrush x:Key="Button.MouseOver.Border" Color="#dcdcdc"/>
        <SolidColorBrush x:Key="Button.Pressed.Background" Color="#d3d3d3"/>
        <SolidColorBrush x:Key="Button.Pressed.Border" Color="#d3d3d3"/>
        <SolidColorBrush x:Key="Button.Disabled.Background" Color="#FFF4F4F4"/>
        <SolidColorBrush x:Key="Button.Disabled.Border" Color="#FFADB2B5"/>
        <SolidColorBrush x:Key="Button.Disabled.Foreground" Color="#FF838383"/>
        <Style TargetType="{x:Type Button}">
            <Setter Property="FocusVisualStyle" Value="{StaticResource FocusVisual}"/>
            <Setter Property="Background" Value="{StaticResource Button.Static.Background}"/>
            <Setter Property="BorderBrush" Value="{StaticResource Button.Static.Border}"/>
            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="HorizontalContentAlignment" Value="Center"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="Padding" Value="1"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border x:Name="border" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" SnapsToDevicePixels="true">
                            <ContentPresenter x:Name="contentPresenter" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsDefaulted" Value="true">
                                <Setter Property="BorderBrush" TargetName="border" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}"/>
                            </Trigger>
                            <Trigger Property="IsMouseOver" Value="true">
                                <Setter Property="Background" TargetName="border" Value="{StaticResource Button.MouseOver.Background}"/>
                                <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource Button.MouseOver.Border}"/>
                            </Trigger>
                            <Trigger Property="IsPressed" Value="true">
                                <Setter Property="Background" TargetName="border" Value="{StaticResource Button.Pressed.Background}"/>
                                <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource Button.Pressed.Border}"/>
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="Background" TargetName="border" Value="{StaticResource Button.Disabled.Background}"/>
                                <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource Button.Disabled.Border}"/>
                                <Setter Property="TextElement.Foreground" TargetName="contentPresenter" Value="{StaticResource Button.Disabled.Foreground}"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

    </UserControl.Resources>
    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="Auto"/>
        </Grid.RowDefinitions>

        <Grid Background="White" VerticalAlignment="Top" Margin="15,5,15,0" Grid.Row="0">
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="Auto"/>
            </Grid.RowDefinitions>

            <Border Grid.Row="0" BorderBrush="Gray" BorderThickness="0,1,1,1">
                <ComboBox FontSize="18" FontFamily="Arial" 
                          SelectedValue="{Binding SelectedConfigId, Mode=TwoWay}" 
                          SelectedValuePath="Key"
                          ItemsSource="{Binding Configs}">
                    <ComboBox.ItemTemplate>
                        <DataTemplate>
                            <TextBlock Text="{Binding Value}"/>
                        </DataTemplate>
                    </ComboBox.ItemTemplate>
                </ComboBox>
            </Border>

            <!--<Border BorderBrush="Gray" BorderThickness="1,0,2,2" Grid.Row="1">
                <Grid>
                    <Grid.RowDefinitions>
                        <RowDefinition Height="Auto"/>
                        <RowDefinition Height="Auto"/>
                    </Grid.RowDefinitions>
                    <Grid Grid.Row="0" Margin="2">
                        <TextBox  Width="245" Height="25" FontSize="18" FontFamily="Arial"  VerticalAlignment="Center" HorizontalAlignment="Left" x:Name="CreateTxt" Margin="5"/>
                        <TextBlock IsHitTestVisible="False" FontFamily="Arial" Text="Create new config" VerticalAlignment="Center" HorizontalAlignment="Left" Margin="10,0,0,0" Foreground="DarkGray">
                            <TextBlock.Style>
                                <Style TargetType="{x:Type TextBlock}">
                                    <Setter Property="Visibility" Value="Collapsed"/>
                                    <Style.Triggers>
                                        <DataTrigger Binding="{Binding Text, ElementName=CreateTxt}" Value="">
                                            <Setter Property="Visibility" Value="Visible"/>
                                        </DataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </TextBlock.Style>
                        </TextBlock>
                    </Grid>
                    <TextBlock Grid.Row="1" FontSize="18" FontFamily="Arial" Text=" Total : 4"/>
                </Grid>
            </Border>-->
        </Grid>

        <TextBlock Text="Name" Grid.Row="1" FontSize="18" FontFamily="Arial" Margin="15,10,0,0"/>
        <Border BorderBrush="Gray" BorderThickness="2,2,2,2" CornerRadius="5" Grid.Row="1" Margin="15,35,0,0" Width="150" Height="30" Background="White" VerticalAlignment="Center" HorizontalAlignment="Left">
            <Grid >
                <TextBox Width="150" Height="30"  FontSize="18" Padding="0 0 0 5" BorderThickness="0" Background="Transparent" FontFamily="Arial" x:Name="NameTxt" Margin="2"
                         Text="{Binding SelectedConfig.Description, Mode=TwoWay}"/>
                <TextBlock IsHitTestVisible="False" Text="Name" VerticalAlignment="Center" HorizontalAlignment="Left" Margin="10,0,0,0" Foreground="DarkGray">
                    <TextBlock.Style>
                        <Style TargetType="{x:Type TextBlock}">
                            <Setter Property="Visibility" Value="Collapsed"/>
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding Text, ElementName=NameTxt}" Value="">
                                    <Setter Property="Visibility" Value="Visible"/>
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </TextBlock.Style>
                </TextBlock>
            </Grid>
        </Border>
        <TextBlock Text="SearchText" Grid.Row="2" FontSize="18" FontFamily="Arial" Margin="15,10,0,0"/>
        <Border BorderBrush="Gray" BorderThickness="2,2,2,2" CornerRadius="5" Grid.Row="2" Margin="15,35,0,0" Width="230" Height="60" Background="White" VerticalAlignment="Center" HorizontalAlignment="Left">
            <Grid >
                <TextBox  Width="230" Height="60" FontSize="18" Padding="0 0 0 5" FontFamily="Arial" x:Name="SearchTextTxt" Margin="2,2,-6,-6"
                          Text="{Binding SelectedConfig.SearchText, Mode=TwoWay}"
                      AcceptsReturn="True" TextWrapping="Wrap" VerticalScrollBarVisibility="Auto" BorderThickness="0" Background="Transparent" Grid.RowSpan="2"/>
                <TextBlock IsHitTestVisible="False" FontSize="18" Text="SearchText" VerticalAlignment="Top" HorizontalAlignment="Left" Margin="10,1,0,0" Foreground="DarkGray" Grid.RowSpan="2">
                    <TextBlock.Style>
                        <Style TargetType="{x:Type TextBlock}">
                            <Setter Property="Visibility" Value="Collapsed"/>
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding Text, ElementName=SearchTextTxt}" Value="">
                                    <Setter Property="Visibility" Value="Visible"/>
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </TextBlock.Style>
                </TextBlock>
            </Grid>
        </Border>

        <TextBlock Text="PromptText" Grid.Row="3" FontSize="18" FontFamily="Arial" Margin="15,10,0,0"/>
        <Border BorderBrush="Gray" BorderThickness="2,2,2,2" CornerRadius="5" Grid.Row="3" Margin="15,35,0,0" Width="180" Height="50" Background="White" VerticalAlignment="Center" HorizontalAlignment="Left">
            <Grid >
                <TextBox Width="180" Height="50" Padding="0 0 0 5" FontSize="18" BorderThickness="0" Background="Transparent" FontFamily="Arial" x:Name="PromptTextTxt" Margin="2"
                         Text="{Binding SelectedConfig.PromptText, Mode=TwoWay}"
                         AcceptsReturn="True" TextWrapping="Wrap" VerticalScrollBarVisibility="Auto"/>
                <TextBlock IsHitTestVisible="False" Text="PromptText" VerticalAlignment="Center" HorizontalAlignment="Left" Margin="10,0,0,20" Foreground="DarkGray">
                    <TextBlock.Style>
                        <Style TargetType="{x:Type TextBlock}">
                            <Setter Property="Visibility" Value="Collapsed"/>
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding Text, ElementName=PromptTextTxt}" Value="">
                                    <Setter Property="Visibility" Value="Visible"/>
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </TextBlock.Style>
                </TextBlock>
            </Grid>
        </Border>

        <TextBlock Text="PromptComplete" Grid.Row="4" FontSize="18" FontFamily="Arial" Margin="15,10,0,0"/>
        <Border BorderBrush="Gray" BorderThickness="2,2,2,2" CornerRadius="5" Grid.Row="4" Margin="15,35,0,0" Width="150" Height="30" Background="White" VerticalAlignment="Center" HorizontalAlignment="Left">
            <Grid >
                <TextBox Width="150" Height="30"  FontSize="18" Padding="0 0 0 5" BorderThickness="0" Background="Transparent" FontFamily="Arial" x:Name="PromptCompleteTxt" Margin="2"
                         Text="{Binding SelectedConfig.PromptComplete, Mode=TwoWay}"
                         AcceptsReturn="True" TextWrapping="Wrap" VerticalScrollBarVisibility="Auto"/>
                <TextBlock IsHitTestVisible="False" Text="PromptComplete" VerticalAlignment="Center" HorizontalAlignment="Left" Margin="10,0,0,0" Foreground="DarkGray">
                    <TextBlock.Style>
                        <Style TargetType="{x:Type TextBlock}">
                            <Setter Property="Visibility" Value="Collapsed"/>
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding Text, ElementName=PromptCompleteTxt}" Value="">
                                    <Setter Property="Visibility" Value="Visible"/>
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </TextBlock.Style>
                </TextBlock>
            </Grid>
        </Border>

        <TextBlock Text="SearchImage" Grid.Row="5" FontSize="18" FontFamily="Arial" Margin="15,10,0,0"/>
        <Border BorderBrush="Gray" BorderThickness="2,2,2,2" CornerRadius="5" Grid.Row="5" Margin="15,35,0,0" Width="150" Height="30" Background="White" VerticalAlignment="Center" HorizontalAlignment="Left">
            <Grid >
                <TextBox Width="150" Height="30"  FontSize="18" Padding="0 0 0 5" BorderThickness="0" Background="Transparent" FontFamily="Arial" x:Name="SearchImageTxt" Margin="2"
                         Text="{Binding SelectedConfig.SearchImageText, Mode=TwoWay}"   
                         AcceptsReturn="True" TextWrapping="Wrap" VerticalScrollBarVisibility="Auto"/>
                <TextBlock IsHitTestVisible="False" Text="SearchImage" VerticalAlignment="Center" HorizontalAlignment="Left" Margin="10,0,0,0" Foreground="DarkGray">
                    <TextBlock.Style>
                        <Style TargetType="{x:Type TextBlock}">
                            <Setter Property="Visibility" Value="Collapsed"/>
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding Text, ElementName=SearchImageTxt}" Value="">
                                    <Setter Property="Visibility" Value="Visible"/>
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </TextBlock.Style>
                </TextBlock>
            </Grid>
        </Border>
        <StackPanel Grid.Row="6" Orientation="Horizontal" HorizontalAlignment="Center" >
            <Border Width="110" Height="40" BorderBrush="LightGray" BorderThickness="2,2,2,2" Background="LightGray" CornerRadius="5" Margin="10,40,0,0" >
                <Button Width="110" Height="40" FontSize="18" FontFamily="Arial" VerticalAlignment="Center" BorderThickness="0" Background="LightGray" Command="{Binding SaveConfigCommand}">Save</Button>
            </Border>
            <Border Width="110" Height="40" BorderBrush="LightGray" BorderThickness="2,2,2,2" Background="LightGray" CornerRadius="5" Margin="30,40,0,0" >
                <Button Width="110" Height="40" FontSize="18" FontFamily="Arial" VerticalAlignment="Center" BorderThickness="0" Background="LightGray" Command="{Binding DeleteConfigCommand}">Delete</Button>
            </Border>
        </StackPanel>
    </Grid>
</UserControl>
